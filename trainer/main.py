import os
import logging
import asyncio
from telegram.ext import Application, CommandHandler
from telegram.request import HTTPXRequest

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def start(update, context):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ê—Ä–µ–Ω—É! –ó–¥–µ—Å—å –±—É–¥—É—Ç PvP-—Å—Ä–∞–∂–µ–Ω–∏—è.")

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ê—Ä–µ–Ω—ã...")
    token = os.getenv("ARENA_TELEGRAM_TOKEN")  # –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ê—Ä–µ–Ω—ã
    if not token:
        raise ValueError("ARENA_TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!")
    hostname = os.getenv("RENDER_EXTERNAL_HOSTNAME")
    port = int(os.getenv("PORT", "10000"))

    request = HTTPXRequest(read_timeout=60, connect_timeout=60)
    app = Application.builder().token(token).request(request).build()

    app.add_handler(CommandHandler("start", start))

    webhook_url = f"https://{hostname}/{token}"
    logger.info(f"üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: {webhook_url}")

    await app.initialize()
    await app.start()
    await app.updater.start_webhook(listen="0.0.0.0", port=port, url_path=token, webhook_url=webhook_url)

    logger.info(f"‚úÖ –í–µ–±—Ö—É–∫ –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    try:
        while True:
            await asyncio.sleep(3600)
    except (KeyboardInterrupt, SystemExit):
        await app.updater.stop()
        await app.stop()
        await app.shutdown()

if __name__ == "__main__":
    asyncio.run(main())
